/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./library/bundle.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./library/Array.ts":
/*!**************************!*\
  !*** ./library/Array.ts ***!
  \**************************/
/*! exports provided: dim, LengthOf, withoutDuplicate, findSum, beginAndEndOf, zip, maxValue, minValue, append, allEqual, difference, dropIf, lastElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dim\", function() { return dim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LengthOf\", function() { return LengthOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withoutDuplicate\", function() { return withoutDuplicate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSum\", function() { return findSum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"beginAndEndOf\", function() { return beginAndEndOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zip\", function() { return zip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"maxValue\", function() { return maxValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"minValue\", function() { return minValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"append\", function() { return append; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allEqual\", function() { return allEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"difference\", function() { return difference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dropIf\", function() { return dropIf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastElement\", function() { return lastElement; });\n/**\n * @param { number } dimension\n * @param { number } initial\n */\nconst dim = function (dimension, initial) {\n    if (typeof dimension === \"number\" && typeof initial === \"number\") {\n        let a = new Array();\n        for (let i = 0; i < dimension; i++) {\n            a[i] = initial;\n        }\n        return a;\n    }\n    else {\n        throw new Error('Invalid arguments');\n    }\n};\n/**\n * @param { array } element\n * @returns return the length of an element an params\n */\nconst LengthOf = function (element) {\n    if (Array.isArray(element)) {\n        return element.length;\n    }\n    throw new Error('Argument must be an array');\n};\n/**\n * @param { [number] } array\n */\nconst withoutDuplicate = function (array) {\n    let newArray = new Set();\n    if (Array.isArray(array)) {\n        array.forEach((element) => newArray.add(element));\n        return newArray;\n    }\n    else {\n        throw new Error(`Argument ${array} must be an array`);\n    }\n};\nconst findSum = function (arr, weight) {\n    let hastable = {};\n    let len = LengthOf(arr);\n    for (let i = 0; i < len; i++) {\n        let currentEl = arr[i], difference = weight - currentEl;\n        if (hastable[currentEl] !== undefined) {\n            return [i, hastable[weight - currentEl]];\n        }\n        else {\n            hastable[difference] = i;\n        }\n    }\n    return -1;\n};\nconst beginAndEndOf = function (array, begin, end) {\n    if (Array.isArray(array)) {\n        let partArray = [];\n        if (!begin && !end) {\n            return array;\n        }\n        for (var i = begin; i < end; i++) {\n            partArray.push(array[i]);\n        }\n        return partArray;\n    }\n    throw new Error('Argument must be an array');\n};\nconst zip = function (arr1, arr2, callback) {\n    if (typeof callback === 'function') {\n        if (arr1 && arr2 !== undefined) {\n            let index, result = [];\n            for (index = 0; index < Math.min(arr1.length, arr2.length); index++) {\n                result.push(callback(arr1[index], arr2[index]));\n            }\n            return result;\n        }\n        else {\n            throw new Error('Arguments must be an array');\n        }\n    }\n    else {\n        throw new Error('last argument must be an function expression');\n    }\n};\n/**\n * @param { [number] } array\n * @returns { number }\n * Retuern the value max inside an array\n */\nconst maxValue = function (array) {\n    if (Array.isArray(array)) {\n        if (array.length < 0) {\n            return array[0];\n        }\n        else {\n            return Math.max(...array);\n        }\n    }\n    else {\n        throw new Error('Argument must be an Array');\n    }\n};\n/**\n * @param { [number] } array\n */\nconst minValue = function (array) {\n    if (Array.isArray(array)) {\n        if (array.length < 0) {\n            return array[0];\n        }\n        else {\n            return Math.min(...array);\n        }\n    }\n    else {\n        throw new Error('Argument must be an Array');\n    }\n};\n/**\n * @param { string } value\n * @param { [number] } array\n * Returns a new list containing the contents of the given list,\n * followed by the given element.\n */\nconst append = function (value, array) {\n    var newArray = array;\n    if (value !== undefined && value !== null) {\n        if (Array.isArray(array)) {\n            newArray.push(value);\n            return newArray;\n        }\n        throw new Error(`Argument must be an array`);\n    }\n    else {\n        throw new Error('Wrong type for your value');\n    }\n};\n/**\n * @param {[number]} array\n */\nconst allEqual = function (array) {\n    if (Array.isArray(array)) {\n        if (LengthOf(array) <= 0) {\n            return true;\n        }\n        else {\n            return array.every(value => value === array[0]);\n        }\n    }\n    else {\n        throw new Error('Argument must be an array');\n    }\n};\n/**\n * @param { number } a\n * @param { number } b\n * @return return the difference between two arrays.\n */\nconst difference = function (a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        const s = new Set(b);\n        return a.filter(x => !s.has(x));\n    }\n    else {\n        throw new Error('Arguments must be an array');\n    }\n};\n/**\n * @param { [number] } arr\n * @param { function } func\n * @returns removes elements from an array until\n *  the passed function returns true\n */\nconst dropIf = function (arr, func) {\n    if (Array.isArray(arr) && typeof func === \"function\") {\n        while (LengthOf(arr) > 0 && !func(arr[0]))\n            arr = arr.slice(1);\n        return arr;\n    }\n    throw new Error('Invalid arguments');\n};\n/**\n *\n * @param {[number]} array\n * @returns Return the last element of an array\n */\nconst lastElement = function (array) {\n    if (!Array.isArray(array) || LengthOf(array) === 0)\n        throw new Error(\"Argument must be an array with values\");\n    else\n        return array[LengthOf(array) - 1];\n};\n\n\n//# sourceURL=webpack:///./library/Array.ts?");

/***/ }),

/***/ "./library/Boolean.ts":
/*!****************************!*\
  !*** ./library/Boolean.ts ***!
  \****************************/
/*! exports provided: isEmpty, isNumeric, isShortThan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumeric\", function() { return isNumeric; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isShortThan\", function() { return isShortThan; });\n/**\n * @param {array}\n * @return boolean\n * @function isEmpty\n */\nconst isEmpty = function (value) {\n    if (typeof value === 'object') {\n        if (value.length === 0) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        throw new Error('Argument must be an array');\n    }\n};\n/**\n * @param {number} argument\n * @returns { boolean }\n */\nconst isNumeric = function (argument) {\n    if (typeof argument === 'number') {\n        if (argument !== null && !isNaN(argument)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        throw new Error('Argument must be a number');\n    }\n};\n/**\n *\n * @param {string} string\n * @param {number} value\n * @returns { boolean | Error | null }\n */\nconst isShortThan = function (string, value) {\n    if (typeof string === 'string') {\n        if (string.length < value) {\n            return true;\n        }\n        else if (string.length === value) {\n            return null;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        throw new Error(\"Argument must be a string\");\n    }\n};\n\n\n//# sourceURL=webpack:///./library/Boolean.ts?");

/***/ }),

/***/ "./library/Math.ts":
/*!*************************!*\
  !*** ./library/Math.ts ***!
  \*************************/
/*! exports provided: add, mult, substract, odd, even, matrix, euclidean, exponential, square, EMC2, primes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mult\", function() { return mult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"substract\", function() { return substract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"odd\", function() { return odd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"even\", function() { return even; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matrix\", function() { return matrix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"euclidean\", function() { return euclidean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exponential\", function() { return exponential; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"square\", function() { return square; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EMC2\", function() { return EMC2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"primes\", function() { return primes; });\n/**\n * @param { number } x\n * @param { number } y\n * Addition deux valeurs\n */\nconst add = function (x, y) {\n    if (x !== undefined && y !== undefined) {\n        if (typeof x === \"number\" && typeof y === \"number\") {\n            if (x !== null && y !== null) {\n                return x + y;\n            }\n            else {\n                throw new Error('Argument must be different of null or undefined');\n            }\n        }\n        else {\n            throw new Error('Argument must be a number');\n        }\n    }\n    throw new Error('Arguments must be provided');\n};\n/**\n * @param { number } x\n * @param { number } y\n * @returns Make a multiplication operation\n */\nconst mult = function (x, y) {\n    if (x !== undefined && x !== null && y !== undefined && y !== null)\n        return x * y;\n    else\n        return 0;\n};\n/**\n * @param { number } x\n * @param { number } y\n * Soustrait deux valeurs\n */\nconst substract = function (x, y) {\n    if (typeof x === \"number\" && typeof y === \"number\") {\n        return x - y;\n    }\n    else {\n        throw new Error('Arguments must a numbers');\n    }\n};\n/**\n * @param { number } value\n */\nconst odd = function (value) {\n    if (typeof value === \"number\") {\n        if (value !== 0) {\n            return value % 2 == 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        throw new Error('Argument must be a Number');\n    }\n};\n/**\n * @param { number } value\n */\nconst even = function (value) {\n    if (typeof value === 'number') {\n        if (value === 0) {\n            return value;\n        }\n        else {\n            return !odd(value);\n        }\n    }\n    throw new Error('Argument must be a number');\n};\n/**\n *\n * @param {number} m\n * @param {number} n\n * @param {number} initial\n * @returns Return numbers formated on matrix\n */\nconst matrix = function (m, n, initial) {\n    let a, i, j, mat = [];\n    for (i = 0; i < m; i++) {\n        a = [];\n        for (j = 0; j < n; j++) {\n            a[j] = initial;\n        }\n        mat[i] = a;\n    }\n    return mat;\n};\n/**\n * @param {number} originalA\n * @param {number} originalB\n * @returns The eucludian value of  numbers\n */\nconst euclidean = function (oringA, originB) {\n    const a = Math.abs(oringA);\n    const b = Math.abs(originB);\n    if (typeof a === 'number' && typeof b === 'number') {\n        if (a === 0 && b === 0) {\n            return null;\n        }\n        if (a === 0 && b !== 0) {\n            return b;\n        }\n        if (a !== 0 && b === 0) {\n            return a;\n        }\n        if (a > b) {\n            return euclidean(a % b, b);\n        }\n        return euclidean(b % a, a);\n    }\n    return null;\n};\n/**\n *\n * @param {number} number\n */\nconst exponential = function (number) {\n    const num = number;\n    if (typeof number === \"number\") {\n        return num.toExponential();\n    }\n    else {\n        throw new Error(`argument must be an number`);\n    }\n};\n/**\n * @param { number } a\n * @param { number } b\n * @return { number }\n */\nconst square = function (a, b) {\n    if (typeof a === \"number\" && typeof b === \"number\") {\n        if (a !== 0 && b !== 0) {\n            let nbrS = 0, q = 1;\n            while (q * q < a)\n                q++;\n            while (q * q <= b) {\n                nbrS++;\n                q++;\n            }\n            return nbrS;\n        }\n        else {\n            throw new Error(\"Invalid argument\");\n        }\n    }\n    else {\n        throw new Error('Arguments must be numbers');\n    }\n};\n/**\n * @param {number} mass\n * @argument C speed of the light\n * @returns Calculate how much energy they could\n * get if they transformed their mass.\n */\nconst EMC2 = function (mass) {\n    const C = Number.parseFloat('2.99792458');\n    let energyJoules = Number.parseFloat('0');\n    let massKg = Number.parseFloat('0');\n    if (mass) {\n        massKg = Number.parseFloat(mass.toFixed(1));\n        energyJoules = massKg * C * C;\n        return {\n            equation: \"e = m * C^2...\",\n            masse: `m = ${massKg} kg`,\n            \"speed of light\": `C = ${C} m/s`,\n            energy: `${energyJoules} joules of energy!`\n        };\n    }\n    return undefined;\n};\n/**\n *\n * @param {number} num\n * @returns Generates primes up to a given number, using the Sieve of Eratosthenes.\n */\nconst primes = function (num) {\n    let state = num;\n    let arr = Array.from({\n        length: num - 1\n    }).map((x, i) => i + 2), sqroot = Math.floor(Math.sqrt(state)), numTillSqrt = Array.from({\n        length: sqroot - 1\n    }).map((x, i) => i + 2);\n    numTillSqrt.forEach(function (x) {\n        return arr = arr.filter(y => y % x !== 0 || y === x);\n    });\n    return arr;\n};\n\n\n//# sourceURL=webpack:///./library/Math.ts?");

/***/ }),

/***/ "./library/String.ts":
/*!***************************!*\
  !*** ./library/String.ts ***!
  \***************************/
/*! exports provided: UpperCase, LowerCase, CamelCase, replaceAll, trim, AccentToNoAccent, CountWords, randomString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UpperCase\", function() { return UpperCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LowerCase\", function() { return LowerCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CamelCase\", function() { return CamelCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"replaceAll\", function() { return replaceAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trim\", function() { return trim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccentToNoAccent\", function() { return AccentToNoAccent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CountWords\", function() { return CountWords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomString\", function() { return randomString; });\n/**\n *\n * @param {string} string\n * @returns Convert a string in UpperCase\n */\nconst UpperCase = function (string) {\n    if (typeof string !== \"string\") {\n        throw new Error('Argument must be a string ');\n    }\n    return string.toUpperCase();\n};\n/**\n *\n * @param {string} string\n * @returns Convert a string in LowerCase\n */\nconst LowerCase = function (string) {\n    if (typeof string !== \"string\") {\n        throw new Error('Argument must be a string ');\n    }\n    return string.toLowerCase();\n};\n/**\n *\n * @param {string} string\n * @returns Convert a string in CamelCase\n */\nconst CamelCase = function (string) {\n    if (typeof string === \"string\") {\n        return string.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => index === 0 ? LowerCase(word) : UpperCase(word)).replace(/\\s+/g, '');\n    }\n    else {\n        throw new Error('Argument must be a string');\n    }\n};\n// Replace word inside a string\nconst replaceAll = function (string, search, repl) {\n    if (typeof string === \"string\" && typeof search === \"string\") {\n        while (string.indexOf(search) !== -1)\n            string = string.replace(search, repl);\n        return string;\n    }\n    else {\n        throw new Error(`${string} and ${search} must be a string`);\n    }\n};\n// Trim string\nconst trim = function (text) {\n    if (typeof text === \"string\") {\n        return text.replace(/^\\s+|\\s+$/g, \"\");\n    }\n    else {\n        throw new Error(`${text} must be a string`);\n    }\n};\n/**\n *\n * @param {string} word\n * @returns A string with accents removed\n */\nconst AccentToNoAccent = function (word) {\n    if (typeof word === \"string\") {\n        // Use a simpler implementation that handles common accents\n        return word.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n    }\n    else {\n        throw new Error('Argument must be a string');\n    }\n};\n/**\n * @param {string} string\n * @returns {string}\n */\nconst CountWords = function (string) {\n    if (typeof string === 'string') {\n        const splitIntoSpaces = (str = string) => str.split(\" \");\n        const count = (array) => array.length;\n        const compose = (a, b) => (c) => a(b(c));\n        const CountWords = compose(count, splitIntoSpaces);\n        return CountWords(string);\n    }\n    else {\n        throw new Error('Argument must be a string');\n    }\n};\n/**\n * @param {string} sequence\n * @param {number} count\n * @param {object} options\n */\nconst randomString = function (sequence, count, options) {\n    options = options || {};\n    let result = sequence.split('').slice(0, count);\n    if (options.capitalize) {\n        result = result.map((w) => {\n            const word = `${UpperCase(w[0])} ${w.substring(1)}`;\n            return word;\n        });\n        return result.join(' ');\n    }\n    return result;\n};\n\n\n//# sourceURL=webpack:///./library/String.ts?");

/***/ }),

/***/ "./library/algorithem.ts":
/*!*******************************!*\
  !*** ./library/algorithem.ts ***!
  \*******************************/
/*! exports provided: BoyerMoreHorspool, getFibonacciSequence, BubbleSort */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BoyerMoreHorspool\", function() { return BoyerMoreHorspool; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFibonacciSequence\", function() { return getFibonacciSequence; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BubbleSort\", function() { return BubbleSort; });\n/**\n * const t = \"bonjour jeremy , tu vas bien ? \"\n * const s = \"jeremy\";\n * console.time(\"moore\");\n * console.log(BoyerMooreHorspool(s,t));\n * console.timeEnd('moore');\n * @param {string } needle\n * @param {string } haystack\n * @returns { number } position\n * The BoyerMooreHorspool it's a algorithm\n * for searching with a time of complexity of O(n)2\n */\nconst BoyerMoreHorspool = function (needle, haystack) {\n    let skip = 0; // init position\n    const preprocess = function preprocess(word) {\n        const table = {};\n        for (let i = 0; i < word.length - 1; i++) {\n            table[word[i]] = word.length - i - 1;\n        }\n        return table;\n    };\n    const baseTable = preprocess(needle);\n    while (haystack.length - skip >= needle.length) {\n        let i = needle.length - 1;\n        while (haystack[skip + i] === needle[i]) {\n            if (i === 0) {\n                return skip;\n            }\n            i--;\n        }\n        skip += (baseTable[haystack[skip + needle.length - 1]] || needle.length);\n    }\n    return -1;\n};\n/**\n * @param {number} length\n */\nconst getFibonacciSequence = function (length) {\n    var n, ref, results;\n    results = [1];\n    const fibonacci = function* () {\n        var current, previous;\n        [previous, current] = [1, 1];\n        while (true) {\n            [previous, current] = [current, previous + current];\n            yield current;\n        }\n    };\n    ref = fibonacci();\n    for (n of ref) {\n        results.push(n);\n        if (results.length === length) {\n            break;\n        }\n    }\n    return results;\n};\n/**\n *\n * @param {[number]} array\n */\nconst BubbleSort = function (array) {\n    let arrayLength = array.length;\n    if (!arrayLength) {\n        return;\n    }\n    if (Array.isArray(array)) {\n        const swap = (array, index1, index2) => {\n            let temp = array[index1];\n            array[index1] = array[index2];\n            array[index2] = temp;\n        };\n        for (let i = 0; i < arrayLength; i++) {\n            for (let j = 0; j <= i; j++) {\n                if (array[i] < array[j]) {\n                    swap(array, i, j);\n                }\n            }\n        }\n        return array;\n    }\n    else {\n        throw new Error(\"Argument must be an array\");\n    }\n};\n\n\n//# sourceURL=webpack:///./library/algorithem.ts?");

/***/ }),

/***/ "./library/bundle.ts":
/*!***************************!*\
  !*** ./library/bundle.ts ***!
  \***************************/
/*! exports provided: getFibonacciSequence, BubbleSort, BoyerMoreHorspool, DefType, by, convert, each, easyReduce, filter, find, linearSearch, map, not, once, reduce, reverse, set, sort, take, unary, AccentToNoAccent, CamelCase, CountWords, LowerCase, UpperCase, randomString, replaceAll, trim, LengthOf, allEqual, append, beginAndEndOf, difference, dim, dropIf, findSum, lastElement, maxValue, minValue, withoutDuplicate, zip, isEmpty, isNumeric, isShortThan, Clone, Floatify, EMC2, add, euclidean, even, matrix, mult, odd, square, substract, primes, define, isEqualTo, TimeOfRunning, loggerHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _algorithem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./algorithem */ \"./library/algorithem.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getFibonacciSequence\", function() { return _algorithem__WEBPACK_IMPORTED_MODULE_0__[\"getFibonacciSequence\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BubbleSort\", function() { return _algorithem__WEBPACK_IMPORTED_MODULE_0__[\"BubbleSort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BoyerMoreHorspool\", function() { return _algorithem__WEBPACK_IMPORTED_MODULE_0__[\"BoyerMoreHorspool\"]; });\n\n/* harmony import */ var _javastips__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./javastips */ \"./library/javastips.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefType\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"DefType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"by\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"by\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"convert\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"convert\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"each\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"each\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"easyReduce\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"easyReduce\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"filter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"find\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"linearSearch\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"linearSearch\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"map\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"not\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"not\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"once\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"reduce\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"reduce\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"reverse\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"reverse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"set\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"sort\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"sort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"take\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"take\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unary\", function() { return _javastips__WEBPACK_IMPORTED_MODULE_1__[\"unary\"]; });\n\n/* harmony import */ var _String__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./String */ \"./library/String.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AccentToNoAccent\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"AccentToNoAccent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CamelCase\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"CamelCase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CountWords\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"CountWords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LowerCase\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"LowerCase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UpperCase\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"UpperCase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"randomString\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"randomString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"replaceAll\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"replaceAll\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"trim\", function() { return _String__WEBPACK_IMPORTED_MODULE_2__[\"trim\"]; });\n\n/* harmony import */ var _Array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Array */ \"./library/Array.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LengthOf\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"LengthOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"allEqual\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"allEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"append\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"append\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"beginAndEndOf\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"beginAndEndOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"difference\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"difference\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dim\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"dim\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dropIf\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"dropIf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findSum\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"findSum\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastElement\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"lastElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"maxValue\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"maxValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"minValue\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"minValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withoutDuplicate\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"withoutDuplicate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"zip\", function() { return _Array__WEBPACK_IMPORTED_MODULE_3__[\"zip\"]; });\n\n/* harmony import */ var _Boolean__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Boolean */ \"./library/Boolean.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return _Boolean__WEBPACK_IMPORTED_MODULE_4__[\"isEmpty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNumeric\", function() { return _Boolean__WEBPACK_IMPORTED_MODULE_4__[\"isNumeric\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isShortThan\", function() { return _Boolean__WEBPACK_IMPORTED_MODULE_4__[\"isShortThan\"]; });\n\n/* harmony import */ var _convert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./convert */ \"./library/convert.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Clone\", function() { return _convert__WEBPACK_IMPORTED_MODULE_5__[\"Clone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Floatify\", function() { return _convert__WEBPACK_IMPORTED_MODULE_5__[\"Floatify\"]; });\n\n/* harmony import */ var _Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Math */ \"./library/Math.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EMC2\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"EMC2\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"add\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"euclidean\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"euclidean\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"even\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"even\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"matrix\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"matrix\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mult\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"mult\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"odd\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"odd\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"square\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"square\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"substract\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"substract\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"primes\", function() { return _Math__WEBPACK_IMPORTED_MODULE_6__[\"primes\"]; });\n\n/* harmony import */ var _tests__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tests */ \"./library/tests.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"define\", function() { return _tests__WEBPACK_IMPORTED_MODULE_7__[\"define\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEqualTo\", function() { return _tests__WEBPACK_IMPORTED_MODULE_7__[\"isEqualTo\"]; });\n\n/* harmony import */ var _debugging__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./debugging */ \"./library/debugging.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TimeOfRunning\", function() { return _debugging__WEBPACK_IMPORTED_MODULE_8__[\"TimeOfRunning\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"loggerHelper\", function() { return _debugging__WEBPACK_IMPORTED_MODULE_8__[\"loggerHelper\"]; });\n\n\n\n\n\n\n\n\n\n\n// Export all functions\n\n\n\n//# sourceURL=webpack:///./library/bundle.ts?");

/***/ }),

/***/ "./library/convert.ts":
/*!****************************!*\
  !*** ./library/convert.ts ***!
  \****************************/
/*! exports provided: Floatify, Clone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Floatify\", function() { return Floatify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Clone\", function() { return Clone; });\n/**\n * @param { number | string} value\n * @param { number } position\n * @returns { number }\n * The functon take a value and a position ,\n * by default the postion is equal to 1,\n * and parse the value to float.\n * The position is the statement of the number of 0 before\n * the value\n\n */\nconst Floatify = function (value, position = 1) {\n    if (typeof value === \"number\" && typeof position === \"number\" || typeof value === \"string\") {\n        if (value === 0 && position > 0) {\n            return value.toString();\n        }\n        else {\n            return parseFloat(value.toString()).toFixed(position);\n        }\n    }\n    else {\n        throw new Error('Argument must be a Number or a String');\n    }\n};\nconst Clone = function (object) {\n    if (typeof object === \"object\") {\n        return JSON.parse(JSON.stringify(object));\n    }\n    else {\n        throw new TypeError('Argument must be an object');\n    }\n};\n\n\n//# sourceURL=webpack:///./library/convert.ts?");

/***/ }),

/***/ "./library/debugging.ts":
/*!******************************!*\
  !*** ./library/debugging.ts ***!
  \******************************/
/*! exports provided: loggerHelper, TimeOfRunning */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loggerHelper\", function() { return loggerHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeOfRunning\", function() { return TimeOfRunning; });\n/**\n * @param {string} mode\n * @param {string} initMessage\n * @param {string} errorMessage\n * @param {number} Nline\n * @returns {string}\n * Define logger's messages\n */\nconst loggerHelper = function (mode, initMessage, errorMessage, Nline) {\n    if (mode === \"DEBUG\") {\n        console.debug(`${initMessage} ${errorMessage} at line: ${Nline}`);\n    }\n    else if (mode === \"ERROR\") {\n        console.error(`${initMessage} ${errorMessage} at line: ${Nline}`);\n    }\n    else if (mode === \"WARN\") {\n        console.error(`${initMessage} ${errorMessage} at line: ${Nline}`);\n    }\n    else {\n        throw new Error('Wrong mode for your debugging');\n    }\n};\n/**\n * @param { function } fnc\n * @param {string} name\n */\nconst TimeOfRunning = function (fnc, name) {\n    if (typeof fnc === \"function\" && typeof name === \"string\") {\n        (function () {\n            console.time(`${name}`);\n            fnc();\n            console.timeEnd(`${name}`);\n        })();\n    }\n    else {\n        throw new Error('Arguments errors');\n    }\n};\n\n\n//# sourceURL=webpack:///./library/debugging.ts?");

/***/ }),

/***/ "./library/javastips.ts":
/*!******************************!*\
  !*** ./library/javastips.ts ***!
  \******************************/
/*! exports provided: each, map, filter, easyReduce, reduce, find, sort, by, linearSearch, reverse, not, convert, unary, once, take, DefType, set */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"each\", function() { return each; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"easyReduce\", function() { return easyReduce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reduce\", function() { return reduce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sort\", function() { return sort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"by\", function() { return by; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"linearSearch\", function() { return linearSearch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reverse\", function() { return reverse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"not\", function() { return not; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convert\", function() { return convert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unary\", function() { return unary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return once; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"take\", function() { return take; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefType\", function() { return DefType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n\n/**\n * @param { [number]} list\n * @param { function } callback\n * Iterate over an input list, calling a provided function fn for each element in the list.\n */\nconst each = function (list, callback) {\n    if (Array.isArray(list)) {\n        for (var i = 0; i < list.length; i++) {\n            callback(list[i], i, list);\n        }\n    }\n    else {\n        for (var key in list) {\n            callback(list[key], key, list);\n        }\n    }\n};\n/**\n  * @param { [number]} list\n  * @param { function } callback\n  * @returns Takes a function and a functor,\n  * applies the function to each of the functor's values,\n  * and returns a functor of the same shape.\n */\nconst map = function (list, callback) {\n    var storage = [];\n    each(list, function (v, i, list) {\n        storage.push(callback(v, i, list));\n    });\n    return storage;\n};\n// filter array\nconst filter = function (array, callback) {\n    var store = [];\n    each(array, function (item, i, list) {\n        if (callback(item, i, list))\n            store.push(item);\n    });\n    return store;\n};\n/**\n * @param { [ number ]} array\n * @param { function } combine\n * @param { number } start\n * @returns\n * Returns a single item by iterating through the list,\n * successively calling the iterator function and passing\n * it an accumulator value and the current value from the array,\n * and then passing the result to the next call.\n */\nconst easyReduce = function (array, combine, start) {\n    let current = start;\n    for (let element of array) {\n        current = combine(current, element);\n    }\n    return current;\n};\n/**\n * @param { [number] } list\n * @param { function } callback\n * @param { number } intiValue\n * @function implementation of reduce function\n * @return number\n *\n */\nconst reduce = function (list, callback, initialValue) {\n    let memo = initialValue;\n    if (Array.isArray(list)) {\n        for (var i = 0; i < list.length; i++) {\n            if (i === 0 && memo === undefined) {\n                memo = list[0];\n                i++;\n            }\n            else {\n                memo = callback(list[i], memo);\n            }\n            callback(list[i], memo);\n        }\n        return memo;\n    }\n    else {\n        throw new Error('Argument must be an array');\n    }\n};\n// find function , help us to ifn a value, inside an array , an object or an string\n/**\n * @param { number | string } value\n * @param { number | string  } inside\n * @return  boolean\n */\nconst find = function (value, inside) {\n    let finded = null;\n    if (Array.isArray(inside)) {\n        each(inside, (v) => {\n            if (v === value) {\n                finded = true;\n            }\n            else {\n                finded = false;\n            }\n        });\n    }\n    else if (typeof inside === \"object\") {\n        var values = Object.values(inside);\n        for (let v of values) {\n            if (Object.is(v, value)) {\n                finded = true;\n            }\n            finded = false;\n        }\n    }\n    else if (typeof inside === \"string\") {\n        if (inside.length <= value) {\n            console.error(\"Cannot find the value , string so short\");\n        }\n        else {\n            var classifier = inside.split(' ')\n                .filter(v => v === value);\n            if (classifier == value)\n                finded = true;\n            else\n                finded = false;\n        }\n    }\n    return finded;\n};\n/**\n * @param { [number] } array\n * function to sort values inside an array\n * this function doesn't work like sort function used in es6\n * this implementatio as inspired from bubble sort .\n*/\nconst sort = function (array) {\n    let len = array.length;\n    if (!len) {\n        return array;\n    }\n    if (Array.isArray(array)) {\n        const swap = (array, index1, index2) => {\n            let temp = array[index1];\n            array[index1] = array[index2];\n            array[index2] = temp;\n        };\n        for (let i = 0; i < len; i++) {\n            for (let j = 0; j <= i; j++) {\n                if (array[i] < array[j]) {\n                    swap(array, i, j);\n                }\n            }\n        }\n        return array;\n    }\n    else {\n        throw new Error(\"Argument must be an array\");\n    }\n};\n/**\n * @param { string } element\n * @returns\n * La fonction by prend une string comme argument et\n *  renvoie une fonction de comparaison qui peut etre utilisée pour trier\n * un tableau d'objets contenant cet argument\n *\n * Par : Douglas Crofford.\n */\nconst by = function (element) {\n    return function (o, p) {\n        var a, b;\n        if (typeof o === 'object' && typeof p === 'object' && o && p) {\n            a = o[element];\n            b = p[element];\n            if (a === b) {\n                return 0;\n            }\n            if (typeof a === typeof b) {\n                return a < b ? -1 : 1;\n            }\n            return typeof a < typeof b ? -1 : 1;\n        }\n        else {\n            throw new Error(`Expected an object when sorting by ${element}`);\n        }\n    };\n};\n// Simple linear search implementation\n/**\n * @param { [number] } array\n * @param { number } number\n */\nconst linearSearch = function (array, number) {\n    var size = array.length, position = 0;\n    if (Array.isArray(array)) {\n        for (var i = 0; i < size; i++) {\n            if (array[i] == number) {\n                position = array[i] - 1;\n                console.log(`Position: ${position} .`);\n                return;\n            }\n        }\n        return false;\n    }\n    else {\n        throw new Error('Wrong type ! , you need an array');\n    }\n};\n/**\n * @param { string | [number] } character\n * @returns { object } reversed\n */\nconst reverse = function (character) {\n    let reversed = [], len = character.length;\n    for (var i = len - 1; i >= 0; i--) {\n        reversed.push(character[i]);\n    }\n    return reversed;\n};\n/**\n * @param { function } fn\n * @returns { function } A function that returns the negation of a  function.\n */\nconst not = function (fn) {\n    if (typeof fn === \"function\") {\n        return function negated(...args) {\n            return !fn(...args);\n        };\n    }\n    throw new Error(\"Argument must be an function\");\n};\n/**\n * @param { object } obj\n * @returns\n * Take an object and convert it by assign a get and set\n * to this object\n */\nconst convert = function (obj) {\n    if (typeof obj === 'object') {\n        Object.keys(obj).forEach(key => {\n            let intervalValue = obj[key];\n            Object.defineProperty(obj, key.toString(), {\n                get() {\n                    console.log(`init value is ${intervalValue}`);\n                    return intervalValue;\n                },\n                set(newValue) {\n                    intervalValue = newValue;\n                    console.log(`init value is ${intervalValue} and the new is ${newValue}`);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        });\n    }\n    else {\n        throw new Error(`Object ${obj} must be a object type`);\n    }\n};\n/**\n * @param { function } callback\n * @returns { function }\n * Wraps a function of any arity\n * (including nullary) in a function that accepts exactly 1 parameter.\n * Any extraneous parameters will not be passed to the supplied function.\n */\nconst unary = function (callback) {\n    if (typeof callback === 'function') {\n        return callback.length === 1 ? callback : (arg) => callback(arg);\n    }\n    else {\n        throw new Error('Argument must be a function');\n    }\n};\n/**\n * @param { function } fn\n * @returns { string | boolean }\n * Accepts a function fn and returns a function that guards\n * invocation of fn such that fn can only ever be called once,\n * no matter how many times the returned function is invoked.\n */\nconst once = function (fn) {\n    if (typeof fn === 'function') {\n        let done = false;\n        return function (...args) {\n            return done ? undefined : ((done = true), fn.apply(this, args));\n        };\n    }\n    else {\n        throw new Error('The element must be a function declaration');\n    }\n};\n/**\n * @param { number | string  } value\n * @param { [number] | [string] } elements\n * @returns {[number]}\n * Returns the first n elements of the given list, string,\n * (or object with a take method)\n */\nconst take = function (value, elements) {\n    let taked = [];\n    let count = elements.length;\n    if (typeof value === \"number\") {\n        if (value > count || value === 0) {\n            return elements;\n        }\n        else {\n            for (let index = 0; index < value; index++) {\n                taked.push(elements[index]);\n            }\n            return taked;\n        }\n    }\n    else {\n        throw new TypeError('Invalid arguments');\n    }\n};\n/**\n * @returns\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'.\n * Does not attempt to distinguish user Object types any further,\n * reporting them all as 'Object'.\n */\nconst DefType = function (param) {\n    while (param) {\n        return typeof param;\n    }\n    return undefined;\n};\n/**\n * @param { Object  } obj\n * @param { String } propertyName\n * @param { String } value\n * @returns { void } Take an object has a first argument and set the selected value\n * or added a value with a prop.\n */\nconst set = function (obj, propertyName, value) {\n    if (typeof obj === \"object\") {\n        for (var property in obj) {\n            if (property === propertyName) {\n                if (obj.hasOwnProperty(propertyName)) {\n                    obj[property] = value;\n                }\n            }\n            else {\n                obj[propertyName] = value;\n            }\n        }\n    }\n    else {\n        throw new Error(\"Argument must be an object\");\n    }\n};\n\n\n//# sourceURL=webpack:///./library/javastips.ts?");

/***/ }),

/***/ "./library/tests.ts":
/*!**************************!*\
  !*** ./library/tests.ts ***!
  \**************************/
/*! exports provided: define, isEqualTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"define\", function() { return define; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEqualTo\", function() { return isEqualTo; });\n\nfunction define(func) {\n    if (typeof func === \"function\") {\n        func();\n    }\n    else {\n        throw new Error('wrong type on your arguments');\n    }\n}\n/**\n * @param { any } abstractValue\n * @param { any } initValue\n */\nconst isEqualTo = function (abstractValue, initValue) {\n    return initValue === abstractValue ? true : new Error(`Not equal : ${abstractValue} !== ${initValue}`);\n};\n\n\n//# sourceURL=webpack:///./library/tests.ts?");

/***/ })

/******/ });